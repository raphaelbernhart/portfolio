# name: Build, Test & Deploy for Production

# on:
#   push:
#     branches: [ master ]

#   # Allows to run this workflow manually from the Actions tab
#   workflow_dispatch:

# env:
#   DATREE_TOKEN: ${{ secrets.DATREE_TOKEN }}

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v2
      
#       # Get current package.json Version
#       - name: Get current package version
#         id: package-version
#         uses: martinbeentjes/npm-get-version-action@v1.1.0
        
#       - name: Build Docker Image
#         id: build-image
#         run: docker build -t ${{ secrets.DOCKER_IMAGE }}:${{ steps.package-version.outputs.current-version}} .

#       - name: Install Datree
#         run: curl https://get.datree.io | /bin/bash
          
#       - name: Run Datree's policy check
#         run: datree test ./config/manifest.yml
  
#   push:
#     needs: test
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
        
#       # Get current package.json Version
#       - name: Get current package version
#         id: package-version
#         uses: martinbeentjes/npm-get-version-action@v1.1.0
        
#       - name: Build Docker Image
#         id: build-image
#         run: docker build -t ${{ secrets.DOCKER_IMAGE }}:${{ steps.package-version.outputs.current-version}}  .

#       - name: Log into registry
#         run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin https://registry.raphaelbernhart.at/
        
#       - name: Push Image
#         run: docker push ${{ secrets.DOCKER_IMAGE }}:${{ steps.package-version.outputs.current-version}} 

#   deploy:
#     needs: push
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v2
        
#         # Get current package.json Version
#       - name: Get current package version
#         id: package-version
#         uses: martinbeentjes/npm-get-version-action@v1.1.0
        
#       - uses: azure/k8s-set-context@v1
#         with:
#           method: kubeconfig
#           kubeconfig: ${{secrets.KUBECONFIG}}
      
#       - uses: Azure/k8s-deploy@v1.3
#         with:
#           action: deploy
#           namespace: ${{ secrets.KUBE_NAMESPACE }}
#           manifests: |
#               ./config/manifest.yml
#           images: '${{ secrets.DOCKER_IMAGE }}:${{ steps.package-version.outputs.current-version}} '
