{
  "version": "1.0",
  "engine": "darwin|Transformer|1.37.3|latest|latest",
  "containerized": false,
  "host_distro": {
    "name": "",
    "version": "",
    "display_name": "other"
  },
  "type": "build",
  "state": "done",
  "target_reference": "registry.showmusic.io/showmusic/showmusic.io:test",
  "system": {
    "type": "Linux",
    "release": "5.10.47-linuxkit",
    "distro": {
      "name": "Alpine Linux",
      "version": "3.13.1",
      "display_name": "Alpine Linux v3.13"
    }
  },
  "source_image": {
    "identity": {
      "id": "sha256:de965840562db2412489bb22769c3a99a198f82e4dec367e76ea0959753f06d6",
      "tags": [
        "test"
      ],
      "names": [
        "registry.showmusic.io/showmusic/showmusic.io:test"
      ],
      "digests": [
        "sha256:413ee44702089bcc1901b73e9bbe8daa4e30f7ec0cb8b3d918515ff4b284cf3f"
      ],
      "full_digests": [
        "registry.showmusic.io/showmusic/showmusic.io@sha256:413ee44702089bcc1901b73e9bbe8daa4e30f7ec0cb8b3d918515ff4b284cf3f"
      ]
    },
    "size": 420636805,
    "size_human": "421 MB",
    "create_time": "2021-03-19T10:38:37Z",
    "docker_version": "20.10.2",
    "architecture": "amd64",
    "exposed_ports": [
      "9000/tcp",
      "443/tcp",
      "80/tcp"
    ],
    "os": "linux",
    "labels": {
      "io.webdevops.layout": "8",
      "io.webdevops.version": "1.5.0",
      "maintainer": "info@webdevops.io",
      "vendor": "WebDevOps.io"
    },
    "env_vars": [
      "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin",
      "PHPIZE_DEPS=autoconf \t\tdpkg-dev dpkg \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tmake \t\tpkgconf \t\tre2c",
      "PHP_INI_DIR=/usr/local/etc/php",
      "PHP_EXTRA_CONFIGURE_ARGS=--enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data --disable-cgi",
      "PHP_CFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64",
      "PHP_CPPFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64",
      "PHP_LDFLAGS=-Wl,-O1 -pie",
      "GPG_KEYS=CBAF69F173A0FEA4B537F470D66C9593118BCCB6 F38252826ACD957EF380D39F2F7956BC5DA04B5D",
      "PHP_VERSION=7.3.27",
      "PHP_URL=https://www.php.net/distributions/php-7.3.27.tar.xz",
      "PHP_ASC_URL=https://www.php.net/distributions/php-7.3.27.tar.xz.asc",
      "PHP_SHA256=65f616e2d5b6faacedf62830fa047951b0136d5da34ae59e6744cbaf5dca148d",
      "TERM=xterm",
      "LANG=C.UTF-8",
      "LC_ALL=C.UTF-8",
      "DOCKER_CONF_HOME=/opt/docker/",
      "LOG_STDOUT=",
      "LOG_STDERR=",
      "APPLICATION_USER=application",
      "APPLICATION_GROUP=application",
      "APPLICATION_PATH=/app",
      "APPLICATION_UID=1000",
      "APPLICATION_GID=1000",
      "PHP_SENDMAIL_PATH=/usr/sbin/sendmail -t -i",
      "LD_PRELOAD=/usr/lib/preloadable_libiconv.so",
      "COMPOSER_VERSION=2",
      "WEB_DOCUMENT_ROOT=/app",
      "WEB_DOCUMENT_INDEX=index.php",
      "WEB_ALIAS_DOMAIN=*.vm",
      "WEB_PHP_TIMEOUT=600",
      "WEB_PHP_SOCKET=127.0.0.1:9000",
      "SERVICE_NGINX_CLIENT_MAX_BODY_SIZE=50m"
    ],
    "container_entry": {
      "exe_path": ""
    }
  },
  "minified_image_size": 147798214,
  "minified_image_size_human": "148 MB",
  "minified_image": "registry.showmusic.io/showmusic/showmusic.io.slim",
  "minified_image_has_data": true,
  "minified_by": 2.846020893053552,
  "artifact_location": "/tmp/docker-slim-state/.docker-slim-state/images/de965840562db2412489bb22769c3a99a198f82e4dec367e76ea0959753f06d6/artifacts",
  "container_report_name": "creport.json",
  "seccomp_profile_name": "registry.showmusic.io-showmusic-showmusic.io-seccomp.json",
  "apparmor_profile_name": "registry.showmusic.io-showmusic-showmusic.io-apparmor-profile",
  "image_stack": [
    {
      "is_top_image": true,
      "id": "sha256:de965840562db2412489bb22769c3a99a198f82e4dec367e76ea0959753f06d6",
      "full_name": "registry.showmusic.io/showmusic/showmusic.io:test",
      "repo_name": "registry.showmusic.io/showmusic/showmusic.io",
      "version_tag": "test",
      "raw_tags": [
        "registry.showmusic.io/showmusic/showmusic.io:test"
      ],
      "create_time": "2021-03-19T10:38:37Z",
      "new_size": 420636805,
      "new_size_human": "421 MB",
      "instructions": [
        {
          "type": "ADD",
          "time": "2021-01-28T23:19:38Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 5613130,
          "size_human": "5.6 MB",
          "params": "file:0e2d487cd80773e947c8aae6daad3d565b7bb019a954af2b8bff188681c00d81 in /",
          "command_snippet": "ADD file:0e2d487cd80773e947c8aae6daad3d565b7...",
          "command_all": "ADD file:0e2d487cd80773e947c8aae6daad3d565b7bb019a954af2b8bff188681c00d81 /",
          "target": "/",
          "source_type": "file"
        },
        {
          "type": "CMD",
          "time": "2021-01-28T23:19:38Z",
          "is_nop": true,
          "is_exec_form": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "[\"/bin/sh\"]\n",
          "command_snippet": "CMD [\"/bin/sh\"]\n",
          "command_all": "CMD [\"/bin/sh\"]\n"
        },
        {
          "type": "ENV",
          "time": "2021-01-29T01:09:31Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "PHPIZE_DEPS=autoconf \t\tdpkg-dev dpkg \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tmake \t\tpkgconf \t\tre2c",
          "command_snippet": "ENV PHPIZE_DEPS=autoconf \t\tdpkg-dev dpkg \t\tf...",
          "command_all": "ENV PHPIZE_DEPS=autoconf \t\tdpkg-dev dpkg \t\tfile \t\tg++ \t\tgcc \t\tlibc-dev \t\tmake \t\tpkgconf \t\tre2c"
        },
        {
          "type": "RUN",
          "time": "2021-01-29T01:09:33Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 3540723,
          "size_human": "3.5 MB",
          "command_snippet": "RUN apk add --no-cache \t\tca-certificates \t\tc...",
          "command_all": "RUN apk add --no-cache \t\tca-certificates \t\tcurl \t\ttar \t\txz \t\topenssl",
          "system_commands": [
            "apk add --no-cache ca-certificates curl tar xz openssl"
          ]
        },
        {
          "type": "RUN",
          "time": "2021-01-29T01:09:34Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 4680,
          "size_human": "4.7 kB",
          "command_snippet": "RUN set -eux; \taddgroup -g 82 -S www-data; \t...",
          "command_all": "RUN set -eux; \taddgroup -g 82 -S www-data; \tadduser -u 82 -D -S -G www-data www-data",
          "system_commands": [
            "set -eux",
            "addgroup -g 82 -S www-data",
            "adduser -u 82 -D -S -G www-data www-data"
          ]
        },
        {
          "type": "ENV",
          "time": "2021-01-29T01:09:34Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "PHP_INI_DIR=/usr/local/etc/php",
          "command_snippet": "ENV PHP_INI_DIR=/usr/local/etc/php",
          "command_all": "ENV PHP_INI_DIR=/usr/local/etc/php"
        },
        {
          "type": "RUN",
          "time": "2021-01-29T01:09:35Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "command_snippet": "RUN set -eux; \tmkdir -p \"$PHP_INI_DIR/conf.d...",
          "command_all": "RUN set -eux; \tmkdir -p \"$PHP_INI_DIR/conf.d\"; \t[ ! -d /var/www/html ]; \tmkdir -p /var/www/html; \tchown www-data:www-data /var/www/html; \tchmod 777 /var/www/html",
          "system_commands": [
            "set -eux",
            "mkdir -p \"$PHP_INI_DIR/conf.d\"",
            "[ ! -d /var/www/html ]",
            "mkdir -p /var/www/html",
            "chown www-data:www-data /var/www/html",
            "chmod 777 /var/www/html"
          ]
        },
        {
          "type": "ENV",
          "time": "2021-01-29T01:18:41Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "PHP_EXTRA_CONFIGURE_ARGS=--enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data --disable-cgi",
          "command_snippet": "ENV PHP_EXTRA_CONFIGURE_ARGS=--enable-fpm --...",
          "command_all": "ENV PHP_EXTRA_CONFIGURE_ARGS=--enable-fpm --with-fpm-user=www-data --with-fpm-group=www-data --disable-cgi"
        },
        {
          "type": "ENV",
          "time": "2021-01-29T01:18:42Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "PHP_CFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64",
          "command_snippet": "ENV PHP_CFLAGS=-fstack-protector-strong -fpi...",
          "command_all": "ENV PHP_CFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"
        },
        {
          "type": "ENV",
          "time": "2021-01-29T01:18:42Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "PHP_CPPFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64",
          "command_snippet": "ENV PHP_CPPFLAGS=-fstack-protector-strong -f...",
          "command_all": "ENV PHP_CPPFLAGS=-fstack-protector-strong -fpic -fpie -O2 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"
        },
        {
          "type": "ENV",
          "time": "2021-01-29T01:18:42Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "PHP_LDFLAGS=-Wl,-O1 -pie",
          "command_snippet": "ENV PHP_LDFLAGS=-Wl,-O1 -pie",
          "command_all": "ENV PHP_LDFLAGS=-Wl,-O1 -pie"
        },
        {
          "type": "ENV",
          "time": "2021-01-29T02:21:25Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "GPG_KEYS=CBAF69F173A0FEA4B537F470D66C9593118BCCB6 F38252826ACD957EF380D39F2F7956BC5DA04B5D",
          "command_snippet": "ENV GPG_KEYS=CBAF69F173A0FEA4B537F470D66C959...",
          "command_all": "ENV GPG_KEYS=CBAF69F173A0FEA4B537F470D66C9593118BCCB6 F38252826ACD957EF380D39F2F7956BC5DA04B5D"
        },
        {
          "type": "ENV",
          "time": "2021-02-04T19:49:42Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "PHP_VERSION=7.3.27",
          "command_snippet": "ENV PHP_VERSION=7.3.27",
          "command_all": "ENV PHP_VERSION=7.3.27"
        },
        {
          "type": "ENV",
          "time": "2021-02-04T19:49:42Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "PHP_URL=https://www.php.net/distributions/php-7.3.27.tar.xz PHP_ASC_URL=https://www.php.net/distributions/php-7.3.27.tar.xz.asc",
          "command_snippet": "ENV PHP_URL=https://www.php.net/distribution...",
          "command_all": "ENV PHP_URL=https://www.php.net/distributions/php-7.3.27.tar.xz PHP_ASC_URL=https://www.php.net/distributions/php-7.3.27.tar.xz.asc"
        },
        {
          "type": "ENV",
          "time": "2021-02-04T19:49:42Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "PHP_SHA256=65f616e2d5b6faacedf62830fa047951b0136d5da34ae59e6744cbaf5dca148d",
          "command_snippet": "ENV PHP_SHA256=65f616e2d5b6faacedf62830fa047...",
          "command_all": "ENV PHP_SHA256=65f616e2d5b6faacedf62830fa047951b0136d5da34ae59e6744cbaf5dca148d"
        },
        {
          "type": "RUN",
          "time": "2021-02-04T19:49:46Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 12180684,
          "size_human": "12 MB",
          "command_snippet": "RUN set -eux; \t\tapk add --no-cache --virtual...",
          "command_all": "RUN set -eux; \t\tapk add --no-cache --virtual .fetch-deps gnupg; \t\tmkdir -p /usr/src; \tcd /usr/src; \t\tcurl -fsSL -o php.tar.xz \"$PHP_URL\"; \t\tif [ -n \"$PHP_SHA256\" ]; then \t\techo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c -; \tfi; \t\tif [ -n \"$PHP_ASC_URL\" ]; then \t\tcurl -fsSL -o php.tar.xz.asc \"$PHP_ASC_URL\"; \t\texport GNUPGHOME=\"$(mktemp -d)\"; \t\tfor key in $GPG_KEYS; do \t\t\tgpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"; \t\tdone; \t\tgpg --batch --verify php.tar.xz.asc php.tar.xz; \t\tgpgconf --kill all; \t\trm -rf \"$GNUPGHOME\"; \tfi; \t\tapk del --no-network .fetch-deps",
          "system_commands": [
            "set -eux",
            "apk add --no-cache --virtual .fetch-deps gnupg",
            "mkdir -p /usr/src",
            "cd /usr/src",
            "curl -fsSL -o php.tar.xz \"$PHP_URL\"",
            "if [ -n \"$PHP_SHA256\" ]",
            "then echo \"$PHP_SHA256 *php.tar.xz\" | sha256sum -c -",
            "fi",
            "if [ -n \"$PHP_ASC_URL\" ]",
            "then curl -fsSL -o php.tar.xz.asc \"$PHP_ASC_URL\"",
            "export GNUPGHOME=\"$(mktemp -d)\"",
            "for key in $GPG_KEYS",
            "do gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys \"$key\"",
            "done",
            "gpg --batch --verify php.tar.xz.asc php.tar.xz",
            "gpgconf --kill all",
            "rm -rf \"$GNUPGHOME\"",
            "fi",
            "apk del --no-network .fetch-deps"
          ]
        },
        {
          "type": "COPY",
          "time": "2021-02-04T19:49:46Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 587,
          "size_human": "587 B",
          "params": "file:ce57c04b70896f77cc11eb2766417d8a1240fcffe5bba92179ec78c458844110 in /usr/local/bin/",
          "command_snippet": "COPY file:ce57c04b70896f77cc11eb2766417d8a12...",
          "command_all": "COPY file:ce57c04b70896f77cc11eb2766417d8a1240fcffe5bba92179ec78c458844110 /usr/local/bin/",
          "target": "/usr/local/bin/",
          "source_type": "file"
        },
        {
          "type": "RUN",
          "time": "2021-02-04T20:00:30Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 54169323,
          "size_human": "54 MB",
          "command_snippet": "RUN set -eux; \tapk add --no-cache --virtual ...",
          "command_all": "RUN set -eux; \tapk add --no-cache --virtual .build-deps \t\t$PHPIZE_DEPS \t\targon2-dev \t\tcoreutils \t\tcurl-dev \t\tlibedit-dev \t\tlibsodium-dev \t\tlibxml2-dev \t\topenssl-dev \t\tsqlite-dev \t; \t\texport CFLAGS=\"$PHP_CFLAGS\" \t\tCPPFLAGS=\"$PHP_CPPFLAGS\" \t\tLDFLAGS=\"$PHP_LDFLAGS\" \t; \tdocker-php-source extract; \tcd /usr/src/php; \tgnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; \t./configure \t\t--build=\"$gnuArch\" \t\t--with-config-file-path=\"$PHP_INI_DIR\" \t\t--with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" \t\t\t\t--enable-option-checking=fatal \t\t\t\t--with-mhash \t\t\t\t--with-pic \t\t\t\t--enable-ftp \t\t--enable-mbstring \t\t--enable-mysqlnd \t\t--with-password-argon2 \t\t--with-sodium=shared \t\t--with-pdo-sqlite=/usr \t\t--with-sqlite3=/usr \t\t\t\t--with-curl \t\t--with-libedit \t\t--with-openssl \t\t--with-zlib \t\t\t\t$(test \"$gnuArch\" = 's390x-linux-musl' && \\\n\techo '--without-pcre-jit') \t\t\t\t${PHP_EXTRA_CONFIGURE_ARGS:-} \t; \tmake -j \"$(nproc)\"; \tfind -type f -name '*.a' -delete; \tmake install; \tfind /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; \tmake clean; \t\tcp -v php.ini-* \"$PHP_INI_DIR/\"; \t\tcd /; \tdocker-php-source delete; \t\trunDeps=\"$( \t\tscanelf --needed --nobanner --format '%n#p' --recursive /usr/local \t\t\t| tr ',' '\\n' \t\t\t| sort -u \t\t\t| awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' \t)\"; \tapk add --no-cache $runDeps; \t\tapk del --no-network .build-deps; \t\tpecl update-channels; \trm -rf /tmp/pear ~/.pearrc; \t\tphp --version",
          "system_commands": [
            "set -eux; apk add --no-cache --virtual .build-deps $PHPIZE_DEPS argon2-dev coreutils curl-dev libedit-dev libsodium-dev libxml2-dev openssl-dev sqlite-dev ; export CFLAGS=\"$PHP_CFLAGS\" CPPFLAGS=\"$PHP_CPPFLAGS\" LDFLAGS=\"$PHP_LDFLAGS\" ; docker-php-source extract; cd /usr/src/php; gnuArch=\"$(dpkg-architecture --query DEB_BUILD_GNU_TYPE)\"; ./configure --build=\"$gnuArch\" --with-config-file-path=\"$PHP_INI_DIR\" --with-config-file-scan-dir=\"$PHP_INI_DIR/conf.d\" --enable-option-checking=fatal --with-mhash --with-pic --enable-ftp --enable-mbstring --enable-mysqlnd --with-password-argon2 --with-sodium=shared --with-pdo-sqlite=/usr --with-sqlite3=/usr --with-curl --with-libedit --with-openssl --with-zlib $(test \"$gnuArch\" = 's390x-linux-musl'",
            "echo '--without-pcre-jit') ${PHP_EXTRA_CONFIGURE_ARGS:-} ; make -j \"$(nproc)\"; find -type f -name '*.a' -delete; make install; find /usr/local/bin /usr/local/sbin -type f -perm +0111 -exec strip --strip-all '{}' + || true; make clean; cp -v php.ini-* \"$PHP_INI_DIR/\"; cd /; docker-php-source delete; runDeps=\"$( scanelf --needed --nobanner --format '%n#p' --recursive /usr/local | tr ',' 'n' | sort -u | awk 'system(\"[ -e /usr/local/lib/\" $1 \" ]\") == 0 { next } { print \"so:\" $1 }' )\"; apk add --no-cache $runDeps; apk del --no-network .build-deps; pecl update-channels; rm -rf /tmp/pear ~/.pearrc; php --version"
          ]
        },
        {
          "type": "COPY",
          "time": "2021-02-04T20:00:31Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 6746,
          "size_human": "6.7 kB",
          "params": "multi:6dfba8f7e64bd54e4d9aa0855ff6ce7a53059e0a733752b4537fd3fdfd32d837 in /usr/local/bin/",
          "command_snippet": "COPY multi:6dfba8f7e64bd54e4d9aa0855ff6ce7a5...",
          "command_all": "COPY multi:6dfba8f7e64bd54e4d9aa0855ff6ce7a53059e0a733752b4537fd3fdfd32d837 /usr/local/bin/",
          "target": "/usr/local/bin/",
          "source_type": "multi"
        },
        {
          "type": "RUN",
          "time": "2021-02-04T20:00:33Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 47738,
          "size_human": "48 kB",
          "command_snippet": "RUN docker-php-ext-enable sodium",
          "command_all": "RUN docker-php-ext-enable sodium",
          "system_commands": [
            "docker-php-ext-enable sodium"
          ]
        },
        {
          "type": "ENTRYPOINT",
          "time": "2021-02-04T20:00:33Z",
          "is_nop": true,
          "is_exec_form": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "[\"docker-php-entrypoint\"]\n",
          "command_snippet": "ENTRYPOINT [\"docker-php-entrypoint\"]\n",
          "command_all": "ENTRYPOINT [\"docker-php-entrypoint\"]\n"
        },
        {
          "type": "WORKDIR",
          "time": "2021-02-04T20:00:33Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "/var/www/html",
          "command_snippet": "WORKDIR /var/www/html",
          "command_all": "WORKDIR /var/www/html",
          "system_commands": [
            "mkdir -p /var/www/html"
          ]
        },
        {
          "type": "RUN",
          "time": "2021-02-04T20:00:35Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 25372,
          "size_human": "25 kB",
          "command_snippet": "RUN set -eux; \tcd /usr/local/etc; \tif [ -d p...",
          "command_all": "RUN set -eux; \tcd /usr/local/etc; \tif [ -d php-fpm.d ]; then \t\tsed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null; \t\tcp php-fpm.d/www.conf.default php-fpm.d/www.conf; \telse \t\tmkdir php-fpm.d; \t\tcp php-fpm.conf.default php-fpm.d/www.conf; \t\t{ \t\t\techo '[global]'; \t\t\techo 'include=etc/php-fpm.d/*.conf'; \t\t} | tee php-fpm.conf; \tfi; \t{ \t\techo '[global]'; \t\techo 'error_log = /proc/self/fd/2'; \t\techo; echo '; https://github.com/docker-library/php/pull/725#issuecomment-443540114'; echo 'log_limit = 8192'; \t\techo; \t\techo '[www]'; \t\techo '; if we send this to /proc/self/fd/1, it never appears'; \t\techo 'access.log = /proc/self/fd/2'; \t\techo; \t\techo 'clear_env = no'; \t\techo; \t\techo '; Ensure worker stdout and stderr are sent to the main error log.'; \t\techo 'catch_workers_output = yes'; \t\techo 'decorate_workers_output = no'; \t} | tee php-fpm.d/docker.conf; \t{ \t\techo '[global]'; \t\techo 'daemonize = no'; \t\techo; \t\techo '[www]'; \t\techo 'listen = 9000'; \t} | tee php-fpm.d/zz-docker.conf",
          "system_commands": [
            "set -eux",
            "cd /usr/local/etc",
            "if [ -d php-fpm.d ]",
            "then sed 's!=NONE/!=!g' php-fpm.conf.default | tee php-fpm.conf > /dev/null",
            "cp php-fpm.d/www.conf.default php-fpm.d/www.conf",
            "else mkdir php-fpm.d",
            "cp php-fpm.conf.default php-fpm.d/www.conf",
            "{ echo '[global]'",
            "echo 'include=etc/php-fpm.d/*.conf'",
            "} | tee php-fpm.conf",
            "fi",
            "{ echo '[global]'",
            "echo 'error_log = /proc/self/fd/2'",
            "echo",
            "echo '",
            "https://github.com/docker-library/php/pull/725#issuecomment-443540114'",
            "echo 'log_limit = 8192'",
            "echo",
            "echo '[www]'",
            "echo '",
            "if we send this to /proc/self/fd/1, it never appears'",
            "echo 'access.log = /proc/self/fd/2'",
            "echo",
            "echo 'clear_env = no'",
            "echo",
            "echo '",
            "Ensure worker stdout and stderr are sent to the main error log.'",
            "echo 'catch_workers_output = yes'",
            "echo 'decorate_workers_output = no'",
            "} | tee php-fpm.d/docker.conf",
            "{ echo '[global]'",
            "echo 'daemonize = no'",
            "echo",
            "echo '[www]'",
            "echo 'listen = 9000'",
            "} | tee php-fpm.d/zz-docker.conf"
          ]
        },
        {
          "type": "STOPSIGNAL",
          "time": "2021-02-04T20:00:35Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "SIGQUIT",
          "command_snippet": "STOPSIGNAL SIGQUIT",
          "command_all": "STOPSIGNAL SIGQUIT"
        },
        {
          "type": "EXPOSE",
          "time": "2021-02-04T20:00:35Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "9000",
          "command_snippet": "EXPOSE 9000",
          "command_all": "EXPOSE 9000"
        },
        {
          "type": "CMD",
          "time": "2021-02-04T20:00:35Z",
          "is_nop": true,
          "is_exec_form": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "[\"php-fpm\"]\n",
          "command_snippet": "CMD [\"php-fpm\"]\n",
          "command_all": "CMD [\"php-fpm\"]\n"
        },
        {
          "type": "LABEL",
          "time": "2021-02-04T22:13:45Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "maintainer=info@webdevops.io vendor=WebDevOps.io io.webdevops.layout=8 io.webdevops.version=1.5.0",
          "command_snippet": "LABEL maintainer=info@webdevops.io vendor=We...",
          "command_all": "LABEL maintainer=info@webdevops.io vendor=WebDevOps.io io.webdevops.layout=8 io.webdevops.version=1.5.0"
        },
        {
          "type": "ENV",
          "time": "2021-02-04T22:13:46Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "TERM=xterm LANG=C.UTF-8 LC_ALL=C.UTF-8",
          "command_snippet": "ENV TERM=xterm LANG=C.UTF-8 LC_ALL=C.UTF-8",
          "command_all": "ENV TERM=xterm LANG=C.UTF-8 LC_ALL=C.UTF-8"
        },
        {
          "type": "ENV",
          "time": "2021-02-04T22:13:46Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "DOCKER_CONF_HOME=/opt/docker/ LOG_STDOUT= LOG_STDERR=",
          "command_snippet": "ENV DOCKER_CONF_HOME=/opt/docker/ LOG_STDOUT...",
          "command_all": "ENV DOCKER_CONF_HOME=/opt/docker/ LOG_STDOUT= LOG_STDERR="
        },
        {
          "type": "ENV",
          "time": "2021-02-04T22:13:47Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "APPLICATION_USER=application APPLICATION_GROUP=application APPLICATION_PATH=/app APPLICATION_UID=1000 APPLICATION_GID=1000",
          "command_snippet": "ENV APPLICATION_USER=application APPLICATION...",
          "command_all": "ENV APPLICATION_USER=application APPLICATION_GROUP=application APPLICATION_PATH=/app APPLICATION_UID=1000 APPLICATION_GID=1000"
        },
        {
          "type": "ENV",
          "time": "2021-02-04T22:13:47Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "PHP_SENDMAIL_PATH=/usr/sbin/sendmail -t -i",
          "command_snippet": "ENV PHP_SENDMAIL_PATH=/usr/sbin/sendmail -t ...",
          "command_all": "ENV PHP_SENDMAIL_PATH=/usr/sbin/sendmail -t -i"
        },
        {
          "type": "ENV",
          "time": "2021-02-04T22:13:48Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "LD_PRELOAD=/usr/lib/preloadable_libiconv.so",
          "command_snippet": "ENV LD_PRELOAD=/usr/lib/preloadable_libiconv...",
          "command_all": "ENV LD_PRELOAD=/usr/lib/preloadable_libiconv.so"
        },
        {
          "type": "ENV",
          "time": "2021-02-04T22:13:48Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "COMPOSER_VERSION=2",
          "command_snippet": "ENV COMPOSER_VERSION=2",
          "command_all": "ENV COMPOSER_VERSION=2"
        },
        {
          "type": "COPY",
          "time": "2021-02-04T22:13:49Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 5181767,
          "size_human": "5.2 MB",
          "params": "dir:eb4dd4d2bb9a40f5b043dc4d1abc131edc66ccab9da1a69d03912c512d16476c in /",
          "command_snippet": "COPY dir:eb4dd4d2bb9a40f5b043dc4d1abc131edc6...",
          "command_all": "COPY dir:eb4dd4d2bb9a40f5b043dc4d1abc131edc66ccab9da1a69d03912c512d16476c /",
          "target": "/",
          "source_type": "dir"
        },
        {
          "type": "COPY",
          "time": "2021-02-04T22:13:50Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 58539,
          "size_human": "58 kB",
          "params": "dir:8438b1104803b85efee43a61b0125c1176169002649c2cfe7d5d6520fc53147f in /opt/docker/",
          "command_snippet": "COPY dir:8438b1104803b85efee43a61b0125c11761...",
          "command_all": "COPY dir:8438b1104803b85efee43a61b0125c1176169002649c2cfe7d5d6520fc53147f /opt/docker/",
          "target": "/opt/docker/",
          "source_type": "dir"
        },
        {
          "type": "RUN",
          "time": "2021-02-04T22:13:53Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 1795004,
          "size_human": "1.8 MB",
          "command_snippet": "RUN set -x && \\\n\techo https://dl-4.alpinelin...",
          "command_all": "RUN set -x && \\\n\techo https://dl-4.alpinelinux.org/alpine/v3.11/community/ >> /etc/apk/repositories && \\\n\t/usr/local/bin/apk-upgrade && \\\n\tapk-install         bash         ca-certificates         openssl && \\\n\tupdate-ca-certificates && \\\n\t/usr/local/bin/generate-dockerimage-info && \\\n\tmkdir -p /etc/pam.d/ && \\\n\techo 'auth sufficient pam_rootok.so' >> /etc/pam.d/su",
          "system_commands": [
            "set -x",
            "echo https://dl-4.alpinelinux.org/alpine/v3.11/community/ >> /etc/apk/repositories",
            "/usr/local/bin/apk-upgrade",
            "apk-install         bash         ca-certificates         openssl",
            "update-ca-certificates",
            "/usr/local/bin/generate-dockerimage-info",
            "mkdir -p /etc/pam.d/",
            "echo 'auth sufficient pam_rootok.so' >> /etc/pam.d/su"
          ]
        },
        {
          "type": "RUN",
          "time": "2021-02-04T22:14:13Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 71148737,
          "size_human": "71 MB",
          "command_snippet": "RUN set -x && \\\n\tchmod +x /opt/docker/bin/* ...",
          "command_all": "RUN set -x && \\\n\tchmod +x /opt/docker/bin/* && \\\n\tapk-install         supervisor         wget         curl         vim         sed         tzdata         busybox-suid && \\\n\tchmod +s /sbin/gosu && \\\n\tdocker-run-bootstrap && \\\n\tdocker-image-cleanup",
          "system_commands": [
            "set -x",
            "chmod +x /opt/docker/bin/*",
            "apk-install         supervisor         wget         curl         vim         sed         tzdata         busybox-suid",
            "chmod +s /sbin/gosu",
            "docker-run-bootstrap",
            "docker-image-cleanup"
          ]
        },
        {
          "type": "RUN",
          "time": "2021-02-04T22:14:17Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 20752436,
          "size_human": "21 MB",
          "command_snippet": "RUN set -x && \\\n\tapk-install shadow && \\\n\tap...",
          "command_all": "RUN set -x && \\\n\tapk-install shadow && \\\n\tapk-install         zip         unzip         bzip2         drill         ldns         openssh-client         rsync         patch         git && \\\n\tdocker-run-bootstrap && \\\n\tdocker-image-cleanup",
          "system_commands": [
            "set -x",
            "apk-install shadow",
            "apk-install         zip         unzip         bzip2         drill         ldns         openssh-client         rsync         patch         git",
            "docker-run-bootstrap",
            "docker-image-cleanup"
          ]
        },
        {
          "type": "RUN",
          "time": "2021-02-04T22:36:53Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 242557114,
          "size_human": "243 MB",
          "command_snippet": "RUN set -x && \\\n\tapk-install         imagema...",
          "command_all": "RUN set -x && \\\n\tapk-install         imagemagick         graphicsmagick         ghostscript         jpegoptim         pngcrush         optipng         pngquant         vips         rabbitmq-c         c-client         libldap         icu-libs         libintl         libpq         libxslt         libzip         libmemcached         yaml         autoconf         g++         make         libtool         pcre-dev         gettext-dev         freetype-dev         libjpeg-turbo-dev         libpng-dev         vips-dev         krb5-dev         openssl-dev         imap-dev         imagemagick-dev         rabbitmq-c-dev         openldap-dev         icu-dev         postgresql-dev         libxml2-dev         ldb-dev         pcre-dev         libxslt-dev         libzip-dev         libmemcached-dev         yaml-dev && \\\n\twget https://github.com/google/guetzli/archive/master.zip && \\\n\tunzip master.zip && \\\n\tmake -C guetzli-master && \\\n\tcp guetzli-master/bin/Release/guetzli /usr/local/bin/ && \\\n\trm -rf master.zip guetzli-master && \\\n\tapk add gnu-libiconv --update-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/ --allow-untrusted && \\\n\tcurl -sS -o /tmp/icu.tar.gz -L https://github.com/unicode-org/icu/releases/download/release-66-1/icu4c-66_1-src.tgz && \\\n\ttar -zxf /tmp/icu.tar.gz -C /tmp && \\\n\tcd /tmp/icu/source && \\\n\t./configure --prefix=/usr/local && \\\n\tmake && \\\n\tmake install && \\\n\tcd / && \\\n\trm -rf /tmp/icu* && \\\n\tdocker-php-ext-configure intl --with-icu-dir=/usr/local && \\\n\tdocker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-webp-dir=/usr/include/ && \\\n\tdocker-php-ext-configure ldap && \\\n\tPHP_OPENSSL=yes docker-php-ext-configure imap --with-kerberos --with-imap-ssl && \\\n\tdocker-php-ext-install         bcmath         bz2         calendar         exif         intl         gettext         ldap         mysqli         imap         hash         pcntl         pdo_mysql         pdo_pgsql         pgsql         soap         sockets         tokenizer         sysvmsg         sysvsem         sysvshm         shmop         xmlrpc         xsl         zip         gd         gettext         opcache && \\\n\tMEMCACHED=\"`mktemp -d`\" && \\\n\tcurl -skL https://github.com/php-memcached-dev/php-memcached/archive/master.tar.gz | tar zxf - --strip-components 1 -C $MEMCACHED && \\\n\tdocker-php-ext-configure $MEMCACHED && \\\n\tdocker-php-ext-install $MEMCACHED && \\\n\trm -rf $MEMCACHED && \\\n\tpecl install apcu && \\\n\tprintf \"\\n\" | pecl install vips && \\\n\tpecl install redis && \\\n\tpecl install mongodb && \\\n\tpecl install imagick && \\\n\tpecl install amqp && \\\n\tpecl install yaml && \\\n\tdocker-php-ext-enable         apcu         redis         imagick         mongodb         amqp         vips         yaml && \\\n\tapk del -f --purge         autoconf         g++         make         libtool         pcre-dev         gettext-dev         freetype-dev         libjpeg-turbo-dev         libpng-dev         vips-dev         krb5-dev         openssl-dev         imap-dev         rabbitmq-c-dev         imagemagick-dev         openldap-dev         icu-dev         postgresql-dev         libxml2-dev         ldb-dev         pcre-dev         libxslt-dev         libzip-dev         libmemcached-dev         yaml-dev && \\\n\trm -f /usr/local/etc/php-fpm.d/zz-docker.conf && \\\n\tcurl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer2 && \\\n\tcurl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer1 --1 && \\\n\tln -sf /usr/local/bin/composer2 /usr/local/bin/composer && \\\n\tdocker-service enable syslog && \\\n\tdocker-service enable cron && \\\n\tdocker-run-bootstrap && \\\n\tdocker-image-cleanup",
          "system_commands": [
            "set -x",
            "apk-install         imagemagick         graphicsmagick         ghostscript         jpegoptim         pngcrush         optipng         pngquant         vips         rabbitmq-c         c-client         libldap         icu-libs         libintl         libpq         libxslt         libzip         libmemcached         yaml         autoconf         g++         make         libtool         pcre-dev         gettext-dev         freetype-dev         libjpeg-turbo-dev         libpng-dev         vips-dev         krb5-dev         openssl-dev         imap-dev         imagemagick-dev         rabbitmq-c-dev         openldap-dev         icu-dev         postgresql-dev         libxml2-dev         ldb-dev         pcre-dev         libxslt-dev         libzip-dev         libmemcached-dev         yaml-dev",
            "wget https://github.com/google/guetzli/archive/master.zip",
            "unzip master.zip",
            "make -C guetzli-master",
            "cp guetzli-master/bin/Release/guetzli /usr/local/bin/",
            "rm -rf master.zip guetzli-master",
            "apk add gnu-libiconv --update-cache --repository http://dl-cdn.alpinelinux.org/alpine/edge/testing/ --allow-untrusted",
            "curl -sS -o /tmp/icu.tar.gz -L https://github.com/unicode-org/icu/releases/download/release-66-1/icu4c-66_1-src.tgz",
            "tar -zxf /tmp/icu.tar.gz -C /tmp",
            "cd /tmp/icu/source",
            "./configure --prefix=/usr/local",
            "make",
            "make install",
            "cd /",
            "rm -rf /tmp/icu*",
            "docker-php-ext-configure intl --with-icu-dir=/usr/local",
            "docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ --with-webp-dir=/usr/include/",
            "docker-php-ext-configure ldap",
            "PHP_OPENSSL=yes docker-php-ext-configure imap --with-kerberos --with-imap-ssl",
            "docker-php-ext-install         bcmath         bz2         calendar         exif         intl         gettext         ldap         mysqli         imap         hash         pcntl         pdo_mysql         pdo_pgsql         pgsql         soap         sockets         tokenizer         sysvmsg         sysvsem         sysvshm         shmop         xmlrpc         xsl         zip         gd         gettext         opcache",
            "MEMCACHED=\"`mktemp -d`\"",
            "curl -skL https://github.com/php-memcached-dev/php-memcached/archive/master.tar.gz | tar zxf - --strip-components 1 -C $MEMCACHED",
            "docker-php-ext-configure $MEMCACHED",
            "docker-php-ext-install $MEMCACHED",
            "rm -rf $MEMCACHED",
            "pecl install apcu",
            "printf \"n\" | pecl install vips",
            "pecl install redis",
            "pecl install mongodb",
            "pecl install imagick",
            "pecl install amqp",
            "pecl install yaml",
            "docker-php-ext-enable         apcu         redis         imagick         mongodb         amqp         vips         yaml",
            "apk del -f --purge         autoconf         g++         make         libtool         pcre-dev         gettext-dev         freetype-dev         libjpeg-turbo-dev         libpng-dev         vips-dev         krb5-dev         openssl-dev         imap-dev         rabbitmq-c-dev         imagemagick-dev         openldap-dev         icu-dev         postgresql-dev         libxml2-dev         ldb-dev         pcre-dev         libxslt-dev         libzip-dev         libmemcached-dev         yaml-dev",
            "rm -f /usr/local/etc/php-fpm.d/zz-docker.conf",
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer2",
            "curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin/ --filename=composer1 --1",
            "ln -sf /usr/local/bin/composer2 /usr/local/bin/composer",
            "docker-service enable syslog",
            "docker-service enable cron",
            "docker-run-bootstrap",
            "docker-image-cleanup"
          ]
        },
        {
          "type": "WORKDIR",
          "time": "2021-02-04T22:36:53Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "/",
          "command_snippet": "WORKDIR /",
          "command_all": "WORKDIR /",
          "system_commands": [
            "mkdir -p /"
          ]
        },
        {
          "type": "EXPOSE",
          "time": "2021-02-04T22:36:53Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "9000",
          "command_snippet": "EXPOSE 9000",
          "command_all": "EXPOSE 9000"
        },
        {
          "type": "ENTRYPOINT",
          "time": "2021-02-04T22:36:54Z",
          "is_nop": true,
          "is_exec_form": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "[\"/entrypoint\"]\n",
          "command_snippet": "ENTRYPOINT [\"/entrypoint\"]\n",
          "command_all": "ENTRYPOINT [\"/entrypoint\"]\n"
        },
        {
          "type": "CMD",
          "time": "2021-02-04T22:36:54Z",
          "is_nop": true,
          "is_exec_form": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "[\"supervisord\"]\n",
          "command_snippet": "CMD [\"supervisord\"]\n",
          "command_all": "CMD [\"supervisord\"]\n"
        },
        {
          "type": "ENV",
          "time": "2021-02-04T22:38:16Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "WEB_DOCUMENT_ROOT=/app WEB_DOCUMENT_INDEX=index.php WEB_ALIAS_DOMAIN=*.vm WEB_PHP_TIMEOUT=600 WEB_PHP_SOCKET=",
          "command_snippet": "ENV WEB_DOCUMENT_ROOT=/app WEB_DOCUMENT_INDE...",
          "command_all": "ENV WEB_DOCUMENT_ROOT=/app WEB_DOCUMENT_INDEX=index.php WEB_ALIAS_DOMAIN=*.vm WEB_PHP_TIMEOUT=600 WEB_PHP_SOCKET="
        },
        {
          "type": "ENV",
          "time": "2021-02-04T22:38:16Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "WEB_PHP_SOCKET=127.0.0.1:9000",
          "command_snippet": "ENV WEB_PHP_SOCKET=127.0.0.1:9000",
          "command_all": "ENV WEB_PHP_SOCKET=127.0.0.1:9000"
        },
        {
          "type": "ENV",
          "time": "2021-02-04T22:38:20Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 0,
          "params": "SERVICE_NGINX_CLIENT_MAX_BODY_SIZE=50m",
          "command_snippet": "ENV SERVICE_NGINX_CLIENT_MAX_BODY_SIZE=50m",
          "command_all": "ENV SERVICE_NGINX_CLIENT_MAX_BODY_SIZE=50m"
        },
        {
          "type": "COPY",
          "time": "2021-02-04T22:38:20Z",
          "is_nop": true,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 12325,
          "size_human": "12 kB",
          "params": "dir:23f45d144d342a67848db29ee7b5cad9d3e00b7c6f276c360a272e658d15433d in /opt/docker/",
          "command_snippet": "COPY dir:23f45d144d342a67848db29ee7b5cad9d3e...",
          "command_all": "COPY dir:23f45d144d342a67848db29ee7b5cad9d3e00b7c6f276c360a272e658d15433d /opt/docker/",
          "target": "/opt/docker/",
          "source_type": "dir"
        },
        {
          "type": "RUN",
          "time": "2021-02-04T22:38:22Z",
          "is_nop": false,
          "local_image_exists": false,
          "layer_index": 0,
          "size": 1737453,
          "size_human": "1.7 MB",
          "command_snippet": "RUN set -x && \\\n\tapk-install         nginx &...",
          "command_all": "RUN set -x && \\\n\tapk-install         nginx && \\\n\tdocker-run-bootstrap && \\\n\tdocker-image-cleanup",
          "system_commands": [
            "set -x",
            "apk-install         nginx",
            "docker-run-bootstrap",
            "docker-image-cleanup"
          ]
        },
        {
          "type": "EXPOSE",
          "time": "2021-02-04T22:38:22Z",
          "is_nop": true,
          "local_image_exists": true,
          "intermediate_image_id": "sha256:a78eb2cf8de09f89823daa895e257730b3f65de3c5310183f92942847e8ee526",
          "layer_index": 0,
          "size": 0,
          "params": "443 80",
          "command_snippet": "EXPOSE 443 80",
          "command_all": "EXPOSE 443 80"
        },
        {
          "type": "COPY",
          "time": "2021-03-07T15:19:47Z",
          "is_nop": true,
          "local_image_exists": true,
          "intermediate_image_id": "sha256:1495330fa0409ef388a0c5a7e1f497287c1cf8816e63b242736f889db2cfdf6d",
          "layer_index": 0,
          "size": 902054,
          "size_human": "902 kB",
          "params": "dir:043b45fa3e5e9c39aa6164b46f450a343cb4a5480aa5e043846459aff5dfc64e in /app",
          "command_snippet": "COPY dir:043b45fa3e5e9c39aa6164b46f450a343cb...",
          "command_all": "COPY dir:043b45fa3e5e9c39aa6164b46f450a343cb4a5480aa5e043846459aff5dfc64e /app",
          "target": "/app",
          "source_type": "dir"
        },
        {
          "type": "COPY",
          "time": "2021-03-19T10:37:24Z",
          "is_nop": true,
          "local_image_exists": true,
          "intermediate_image_id": "sha256:a1be7be916c8ca8ba78db2ab498c2c3467749eeac40a0663c147c665a59313fa",
          "layer_index": 0,
          "size": 64,
          "size_human": "64 B",
          "params": "file:85c208f3fd3a7f571229a2fbcdb1b70c20a3f10398ff16464f2f967152f2c144 in /opt/docker/etc/nginx/vhost.common.d/",
          "command_snippet": "COPY file:85c208f3fd3a7f571229a2fbcdb1b70c20...",
          "command_all": "COPY file:85c208f3fd3a7f571229a2fbcdb1b70c20a3f10398ff16464f2f967152f2c144 /opt/docker/etc/nginx/vhost.common.d/",
          "target": "/opt/docker/etc/nginx/vhost.common.d/",
          "source_type": "file"
        },
        {
          "type": "COPY",
          "time": "2021-03-19T10:38:36Z",
          "is_nop": true,
          "local_image_exists": true,
          "intermediate_image_id": "sha256:0143f22c69e47211893c78c3b6660d84265455be9a54206fbd8da0238c5e29b9",
          "layer_index": 0,
          "size": 275,
          "size_human": "275 B",
          "params": "file:c5c506bd290213ba500cfe8d53d8181536b82d3010697668162b0328fa48a2f6 in /opt/docker/etc/nginx/vhost.common.d/",
          "command_snippet": "COPY file:c5c506bd290213ba500cfe8d53d8181536...",
          "command_all": "COPY file:c5c506bd290213ba500cfe8d53d8181536b82d3010697668162b0328fa48a2f6 /opt/docker/etc/nginx/vhost.common.d/",
          "target": "/opt/docker/etc/nginx/vhost.common.d/",
          "source_type": "file"
        },
        {
          "type": "WORKDIR",
          "time": "2021-03-19T10:38:36Z",
          "is_nop": true,
          "local_image_exists": true,
          "intermediate_image_id": "sha256:2c5f256dda801c3ffb70c07bee984ccaa58f812e7cf4a365e6ccd89937bf0344",
          "layer_index": 0,
          "size": 0,
          "params": "/app",
          "command_snippet": "WORKDIR /app",
          "command_all": "WORKDIR /app",
          "system_commands": [
            "mkdir -p /app"
          ]
        },
        {
          "type": "RUN",
          "time": "2021-03-19T10:38:37Z",
          "is_last_instruction": true,
          "is_nop": false,
          "local_image_exists": true,
          "layer_index": 0,
          "size": 902054,
          "size_human": "902 kB",
          "command_snippet": "RUN chmod -R 777 /app",
          "command_all": "RUN chmod -R 777 /app",
          "system_commands": [
            "chmod -R 777 /app"
          ],
          "raw_tags": [
            "registry.showmusic.io/showmusic/showmusic.io:test"
          ]
        }
      ]
    }
  ]
}
